###################################################
## update values in final_df
###################################################
for (i in 1:nrow(updated_df)){
curr_id <- updated_df[i,"ID"]
curr_idx <- which(gsub(" |\\.","",final_df$X) == gsub(" |\\.","",curr_id))
print(curr_idx)
if ( length(curr_idx) > 0){ #some pts has already been removed from the data_stationary.csv due to other conditions(ex: outliers)
##CASCORE
updated_CASCORE <- updated_df[i,"updated_CASCORE"]
if (is.na(updated_CASCORE) == F) {
final_df[curr_idx,"CASCOREA_bl"] <- updated_CASCORE
}
updated_CASCORE <- updated_df[i,"updated_CASCORE1"]
if (is.na(updated_CASCORE) == F) {
final_df[curr_idx,"CASCORE1A_yr1"] <- updated_CASCORE
}
updated_CASCORE <- updated_df[i,"updated_CASCORE2"]
if (is.na(updated_CASCORE) == F) {
final_df[curr_idx,"CASCORE2A_yr2"] <- updated_CASCORE
}
##SqRtVOLUMEA_bl SqRtVOLUME1A_yr1 SqRtVOLUME2A_yr2
updated_sqrtvol <- updated_df[i,"updated_sqrtvol"]
if (is.na(updated_sqrtvol) == F) {
final_df[curr_idx,"SqRtVOLUMEA_bl"] <- updated_sqrtvol
}
updated_sqrtvol <- updated_df[i,"updated_sqrtvol1"]
if (is.na(updated_sqrtvol) == F) {
final_df[curr_idx,"SqRtVOLUME1A_yr1"] <- updated_sqrtvol
}
updated_sqrtvol <- updated_df[i,"updated_sqrtvol2"]
if (is.na(updated_sqrtvol) == F) {
final_df[curr_idx,"SqRtVOLUME2A_yr2"] <- updated_sqrtvol
}
}
}
final_df[122,]
source('~/Desktop/DrChen_Projects/ROD_Project/ROD_Organized_Code/1B_Update_Data.R', echo=TRUE)
final_df
write.csv(final_df, paste0(out_dir,"data_stationary_updated.csv"),row.names=TRUE)
write.csv(final_df, paste0(out_dir,"data_stationary_updated.csv"),row.names=FALSE)
View(updated_df)
View(reviewd_df)
View(reviewd_df)
source("Ultils_LoadData_Funcs.R")
source("Ultility.R")
###Input and output directory
in_dir <- "/Users/lucasliu/Desktop/DrChen_Projects/ROD_Project/Data/"
out_dir <- "/Users/lucasliu/Desktop/DrChen_Projects/ROD_Project/Intermediate_Data/0103_21/"
data_filename <-  "CombinedROD_BMD_CAC_Bioch_Echo.csv"
##############################################################################################
##                Section 1: Load ROD Data and Clean and remove unwanted Features           ##
##############################################################################################
raw_data_df <- read.csv(paste0(in_dir, data_filename), stringsAsFactors = F)
#1. Identify original features required for the study
byyear_res <-   Get_ByYear_Features(raw_data_df)
bl_features <- byyear_res[[1]]
yr1_features <- byyear_res[[2]]
yr2_features <- byyear_res[[3]]
outcomes <- byyear_res[[4]]
View(raw_data_df)
source("Ultils_LoadData_Funcs.R")
source("Ultility.R")
###Input and output directory
in_dir <- "/Users/lucasliu/Desktop/DrChen_Projects/ROD_Project/Data/"
out_dir <- "/Users/lucasliu/Desktop/DrChen_Projects/ROD_Project/Intermediate_Data/0103_21/"
data_filename <-  "CombinedROD_BMD_CAC_Bioch_Echo.csv"
reviewed_dir <- "/Users/lucasliu/Desktop/DrChen_Projects/ROD_Project/Data/"
##############################################################################################
##                Section 1: Load ROD Data and Clean and remove unwanted Features           ##
##############################################################################################
raw_data_df <- read.csv(paste0(in_dir, data_filename), stringsAsFactors = F)
#1. Identify original features required for the study
byyear_res <-   Get_ByYear_Features(raw_data_df)
bl_features <- byyear_res[[1]]
yr1_features <- byyear_res[[2]]
yr2_features <- byyear_res[[3]]
outcomes <- byyear_res[[4]]
##############################################################################################
# Section1B: Load Manully checked negative trend pts (added 01/03/21)
##############################################################################################
reviewd_df <- read.xlsx(paste0(reviewed_dir,"deltacacsquvol.xlsx"))
###Get Update sqrtvolumn and CASCORE values
toupdate_idxes <- which(is.na(reviewd_df[,"Rescore.A"])==F
| is.na(reviewd_df[,"Rescore.1A"])==F
| is.na(reviewd_df[,"Rescore.2A"])==F)
updated_df <-as.data.frame(matrix(NA, nrow = length(toupdate_idxes),ncol = 7))
colnames(updated_df) <-c("ID","updated_CASCORE","updated_sqrtvol","updated_CASCORE1","updated_sqrtvol1","updated_CASCORE2","updated_sqrtvol2")
for (i in 1:length(toupdate_idxes)){
curr_idx <- toupdate_idxes[i]
curr_id <- reviewd_df[curr_idx,"ID"]
update_value <- reviewd_df[curr_idx,"Rescore.A"]
updated_CASCORE <- as.numeric(strsplit(update_value,"\\(")[[1]][1])
updated_sqrtvol <- as.numeric(gsub("\\(|\\)","",strsplit(update_value,"\\(")[[1]][2]))
update_value <- reviewd_df[curr_idx,"Rescore.1A"]
updated_CASCORE1 <- as.numeric(strsplit(update_value,"\\(")[[1]][1])
updated_sqrtvol1 <- as.numeric(gsub("\\(|\\)","",strsplit(update_value,"\\(")[[1]][2]))
update_value <- reviewd_df[curr_idx,"Rescore.2A"]
updated_CASCORE2 <- as.numeric(strsplit(update_value,"\\(")[[1]][1])
updated_sqrtvol2 <- as.numeric(gsub("\\(|\\)","",strsplit(update_value,"\\(")[[1]][2]))
updated_df[i,"ID"] <- curr_id
updated_df[i,"updated_CASCORE"] <- updated_CASCORE
updated_df[i,"updated_sqrtvol"] <- updated_sqrtvol
updated_df[i,"updated_CASCORE1"] <- updated_CASCORE1
updated_df[i,"updated_sqrtvol1"] <- updated_sqrtvol1
updated_df[i,"updated_CASCORE2"] <- updated_CASCORE2
updated_df[i,"updated_sqrtvol2"] <- updated_sqrtvol2
}
source("Ultils_LoadData_Funcs.R")
source("Ultility.R")
###Input and output directory
in_dir <- "/Users/lucasliu/Desktop/DrChen_Projects/ROD_Project/Data/"
out_dir <- "/Users/lucasliu/Desktop/DrChen_Projects/ROD_Project/Intermediate_Data/0103_21/"
data_filename <-  "CombinedROD_BMD_CAC_Bioch_Echo.csv"
reviewed_dir <- "/Users/lucasliu/Desktop/DrChen_Projects/ROD_Project/Data/"
##############################################################################################
##                Section 1: Load ROD Data and Clean and remove unwanted Features           ##
##############################################################################################
raw_data_df <- read.csv(paste0(in_dir, data_filename), stringsAsFactors = F)
#1. Identify original features required for the study
byyear_res <-   Get_ByYear_Features(raw_data_df)
bl_features <- byyear_res[[1]]
yr1_features <- byyear_res[[2]]
yr2_features <- byyear_res[[3]]
outcomes <- byyear_res[[4]]
##############################################################################################
# Section1B: Load Manully checked negative trend pts (added 01/03/21)
##############################################################################################
reviewd_df <- read.xlsx(paste0(reviewed_dir,"deltacacsquvol.xlsx"))
###Get Update sqrtvolumn and CASCORE values
toupdate_idxes <- which(is.na(reviewd_df[,"Rescore.A"])==F
| is.na(reviewd_df[,"Rescore.1A"])==F
| is.na(reviewd_df[,"Rescore.2A"])==F)
updated_df <-as.data.frame(matrix(NA, nrow = length(toupdate_idxes),ncol = 7))
colnames(updated_df) <-c("ID","updated_CASCORE","updated_sqrtvol","updated_CASCORE1","updated_sqrtvol1","updated_CASCORE2","updated_sqrtvol2")
for (i in 1:length(toupdate_idxes)){
curr_idx <- toupdate_idxes[i]
curr_id <- reviewd_df[curr_idx,"ID"]
update_value <- reviewd_df[curr_idx,"Rescore.A"]
updated_CASCORE <- as.numeric(strsplit(update_value,"\\(")[[1]][1])
updated_sqrtvol <- as.numeric(gsub("\\(|\\)","",strsplit(update_value,"\\(")[[1]][2]))
update_value <- reviewd_df[curr_idx,"Rescore.1A"]
updated_CASCORE1 <- as.numeric(strsplit(update_value,"\\(")[[1]][1])
updated_sqrtvol1 <- as.numeric(gsub("\\(|\\)","",strsplit(update_value,"\\(")[[1]][2]))
update_value <- reviewd_df[curr_idx,"Rescore.2A"]
updated_CASCORE2 <- as.numeric(strsplit(update_value,"\\(")[[1]][1])
updated_sqrtvol2 <- as.numeric(gsub("\\(|\\)","",strsplit(update_value,"\\(")[[1]][2]))
updated_df[i,"ID"] <- curr_id
updated_df[i,"updated_CASCORE"] <- updated_CASCORE
updated_df[i,"updated_sqrtvol"] <- updated_sqrtvol
updated_df[i,"updated_CASCORE1"] <- updated_CASCORE1
updated_df[i,"updated_sqrtvol1"] <- updated_sqrtvol1
updated_df[i,"updated_CASCORE2"] <- updated_CASCORE2
updated_df[i,"updated_sqrtvol2"] <- updated_sqrtvol2
}
raw_data_df$ID
i<-1
curr_id <- updated_df[i,"ID"]
curr_idx <- which(gsub(" |\\.","",raw_data_df$ID) == gsub(" |\\.","",curr_id))
print(curr_idx)
colnames(raw_data_df)
for (i in 1:nrow(updated_df)){
curr_id <- updated_df[i,"ID"]
curr_idx <- which(gsub(" |\\.","",raw_data_df$ID) == gsub(" |\\.","",curr_id))
print(curr_idx)
if ( length(curr_idx) > 0){ #some pts has already been removed from the data_stationary.csv due to other conditions(ex: outliers)
##CASCORE
updated_CASCORE <- updated_df[i,"updated_CASCORE"]
if (is.na(updated_CASCORE) == F) {
raw_data_df[curr_idx,"CASCOREA"] <- updated_CASCORE
}
updated_CASCORE <- updated_df[i,"updated_CASCORE1"]
if (is.na(updated_CASCORE) == F) {
raw_data_df[curr_idx,"CASCORE1A"] <- updated_CASCORE
}
updated_CASCORE <- updated_df[i,"updated_CASCORE2"]
if (is.na(updated_CASCORE) == F) {
raw_data_df[curr_idx,"CASCORE2A"] <- updated_CASCORE
}
##SqRtVOLUMEA_bl SqRtVOLUME1A_yr1 SqRtVOLUME2A_yr2
updated_sqrtvol <- updated_df[i,"updated_sqrtvol"]
if (is.na(updated_sqrtvol) == F) {
raw_data_df[curr_idx,"SqRtVOLUMEA"] <- updated_sqrtvol
}
updated_sqrtvol <- updated_df[i,"updated_sqrtvol1"]
if (is.na(updated_sqrtvol) == F) {
raw_data_df[curr_idx,"SqRtVOLUME1A"] <- updated_sqrtvol
}
updated_sqrtvol <- updated_df[i,"updated_sqrtvol2"]
if (is.na(updated_sqrtvol) == F) {
raw_data_df[curr_idx,"SqRtVOLUME2A"] <- updated_sqrtvol
}
}
}
source('~/Desktop/DrChen_Projects/ROD_Project/ROD_Organized_Code/1A_Data_Preprossing.R', echo=TRUE)
View(analysis_df)
View(updated_df)
source('~/Desktop/DrChen_Projects/ROD_Project/ROD_Organized_Code/1A_Data_Preprossing.R', echo=TRUE)
source('~/Desktop/DrChen_Projects/ROD_Project/ROD_Organized_Code/2_Compute_Diffs.R', echo=TRUE)
source("Ultility.R")
library(ggplot2)
###Input and output directory
in_dir <- "/Users/lucasliu/Desktop/DrChen_Projects/ROD_Project/Intermediate_Data/0103_21/"
out_dir <- "/Users/lucasliu/Desktop/DrChen_Projects/ROD_Project/Intermediate_Data/0103_21/"
###################################################
### Load feature data
###################################################
#1. staionary feature data
final_df <- read.csv(paste0(in_dir,"data_stationary.csv"), stringsAsFactors = F)
rownames(final_df) <- final_df$X
final_df <- final_df[,-1]
#2. Load Diff feature data
final_delta_df <- read.csv(paste0(in_dir,"data_Diff.csv"), stringsAsFactors = F)
rownames(final_delta_df) <- final_delta_df$X
final_delta_df <- final_delta_df[,-1]
reorder_tomatch_df <- final_delta_df[match(rownames(final_delta_df), rownames(final_df)),]
comb_df <- cbind(final_df, reorder_tomatch_df)
###################################################
##1. catogorical sqrtvolA outcome for baseline, 1yr , 2yr
#Non-high risk : sqrtvol < 19.1  (at baseline or 1st or 2nd yr.)
#High Risk:      sqrtvol >= 19.1 (at baseline or 1st or 2nd yr.)
###################################################
CatOutcome_df1 <- create_sqrtVol_label_each_year(comb_df,"SqRtVOLUMEA_bl","bl") #baseline
CatOutcome_df2 <- create_sqrtVol_label_each_year(comb_df,"SqRtVOLUME1A_yr1","yr1") #baseline
CatOutcome_df3 <- create_sqrtVol_label_each_year(comb_df,"SqRtVOLUME2A_yr2","yr2") #baseline
#output label file: 0: sqrtvol < 400 ; 1:sqrtvol >= 400
Stationary_outcome_df <- cbind.data.frame(CatOutcome_df1,CatOutcome_df2,CatOutcome_df3)
table(Stationary_outcome_df$SqRtVOLUME_Cat_bl)
table(Stationary_outcome_df$SqRtVOLUME_Cat_yr1)
table(Stationary_outcome_df$SqRtVOLUME_Cat_yr2)
View(Stationary_outcome_df)
###################################################
start_high_grp_idexes <- which(Stationary_outcome_df$SqRtVOLUME_Cat_bl==1)
start_non_high_grp_idexes <- which(Stationary_outcome_df$SqRtVOLUME_Cat_bl==0)
Stationary_outcome_df$Starting_SqRtVOLUME_LABEL <- NA
Stationary_outcome_df$Starting_SqRtVOLUME_LABEL[start_high_grp_idexes] <- 1
Stationary_outcome_df$Starting_SqRtVOLUME_LABEL[start_non_high_grp_idexes] <- 0
start_high_grp_Ids <- rownames(Stationary_outcome_df)[start_high_grp_idexes]
start_nonhigh_grp_Ids <- rownames(Stationary_outcome_df)[start_non_high_grp_idexes]
start_high_grp_Ids
length(start_high_grp_Ids)
length(start_nonhigh_grp_Ids)
View(Stationary_outcome_df)
##2. catogorical Diff_sqrtvolA Trend outcome for baseline ot 1yr and 1yr to 2yr
## increase trend, decrease trend or little change trend
###################################################
#2B. Start nonhigh (CASCOREA_bl == low)
###################################################
analysis_grp_df <- nonh_grp_diff_df
###################################################
### Updated 01/03/21,
### For Start non-high group:
### 1. Start non-high (SqRtVOLUME_Cat_bl == non-high)
###    A. start non-high, stay non-high
###    B. start non-high,  increase (use changing distribution to decided)
###################################################
#1. Get high and non-high group idxes
h_grp_idxes <- which(rownames(comb_df) %in% start_high_grp_Ids)
nonh_grp_idxes <- which(rownames(comb_df) %in% start_nonhigh_grp_Ids)
h_grp_diff_df <- comb_df[h_grp_idxes,] #99
nonh_grp_diff_df <- comb_df[nonh_grp_idxes,] #72
##2. catogorical Diff_sqrtvolA Trend outcome for baseline ot 1yr and 1yr to 2yr
## increase trend, decrease trend or little change trend
###################################################
#2B. Start nonhigh (CASCOREA_bl == low)
###################################################
analysis_grp_df <- nonh_grp_diff_df
thres_res <- find_distribution_SqrtVol_diff01_and_diff02(analysis_grp_df)
all_SqRtVOLUME_diff <- thres_res[[1]]
thres_l <- thres_res[[2]]
thres_h <- thres_res[[3]]
thres_l
thres_h
#merge the the CASCore diff more than 20 to get better histgram plot
all_SqRtVOLUME_diff <- cbind.data.frame(rep("none",length(all_SqRtVOLUME_diff)),all_SqRtVOLUME_diff)
#all_SqRtVOLUME_diff[which(all_SqRtVOLUME_diff[,"all_SqRtVOLUME_diff"] >=20),"all_SqRtVOLUME_diff"] <- 20
seq_breaks <- c(seq(0,max(all_SqRtVOLUME_diff[,"all_SqRtVOLUME_diff"],na.rm = T),by=1))
#seq_label <-  c(seq_breaks[-length(seq_breaks)],paste0(">=",20))
seq_label <- seq_breaks
p <- plot_histgram_func(all_SqRtVOLUME_diff,"all_SqRtVOLUME_diff", "SqRtVOLUME_Diff" , "Count","Distribution of all SqRtVOLUME_Diff01 and SqRtVOLUMEE_Diff02 (Start non-High Grp)",0.5,seq_breaks,seq_label)
p <- add_verline_toplot_function(p,thres_l,31,"darkblue",0.5,5)
p <- add_verline_toplot_function(p,thres_h,31,"darkred",1,5)
print(p)
thres_l
thres_h
View(analysis_grp_df)
colnames(nonh_grp_diff_df)
analysis_grp_df[,c("SqRtVOLUMEA_bl","SqRtVOLUME1A_yr1","SqRtVOLUME2A_yr2")]
which(analysis_grp_df[,"SqRtVOLUMEA_bl"] < 19.1)
nrow(analysis_grp_df)
length(which(analysis_grp_df[,"SqRtVOLUMEA_bl"] < 19.1))
which(analysis_grp_df[,"SqRtVOLUMEA_bl"] < 19.1 & analysis_grp_df[,"SqRtVOLUME1A_yr1"] < 19.1)
which(analysis_grp_df[,"SqRtVOLUMEA_bl"] < 19.1 & analysis_grp_df[,"SqRtVOLUME1A_yr2"] < 19.1)
which(analysis_grp_df[,"SqRtVOLUMEA_bl"] < 19.1 & analysis_grp_df[,"SqRtVOLUME2A_yr2"] < 19.1)
which(analysis_grp_df[,"SqRtVOLUMEA_bl"] < 19.1 & analysis_grp_df[,"SqRtVOLUME2A_yr2"] >= 19.1)
nonH_nonH_indexes <- which(analysis_grp_df[,"SqRtVOLUMEA_bl"] < 19.1 & analysis_grp_df[,"SqRtVOLUME2A_yr2"] < 19.1)
nonH_nonH_indexes <- which(analysis_grp_df[,"SqRtVOLUMEA_bl"] < 19.1
& analysis_grp_df[,"SqRtVOLUME2A_yr2"] < 19.1)
nonH_H_indexes <- which(analysis_grp_df[,"SqRtVOLUMEA_bl"] < 19.1
& analysis_grp_df[,"SqRtVOLUME2A_yr2"] >= 19.1)
analysis_grp_df[-c(nonH_nonH_indexes,nonH_H_indexes),]
length(c(nonH_nonH_indexes,nonH_H_indexes))
unique(c(nonH_nonH_indexes,nonH_H_indexes))
length(unique(c(nonH_nonH_indexes,nonH_H_indexes)))
check <- analysis_grp_df[-c(nonH_nonH_indexes,nonH_H_indexes),c("SqRtVOLUMEA_bl","SqRtVOLUME1A_yr1","SqRtVOLUME2A_yr2")]
View(check)
#for ptshas yr1 value, but not yr2 value:
nonH_nonH_indexes2 <- which(analysis_grp_df[,"SqRtVOLUMEA_bl"] < 19.1 & is.na(analysis_grp_df[,"SqRtVOLUME2A_yr2"])==T
& analysis_grp_df[,"SqRtVOLUME2A_yr1"] < 19.1)
is.na(analysis_grp_df[,"SqRtVOLUME2A_yr2"])==T
nonH_nonH_indexes2 <- which(analysis_grp_df[,"SqRtVOLUMEA_bl"] < 19.1
& is.na(analysis_grp_df[,"SqRtVOLUME2A_yr2"])==T
& analysis_grp_df[,"SqRtVOLUME2A_yr1"] < 19.1)
#for ptshas yr1 value, but not yr2 value:
nonH_nonH_indexes2 <- which(analysis_grp_df[,"SqRtVOLUMEA_bl"] < 19.1
& is.na(analysis_grp_df[,"SqRtVOLUME2A_yr2"])==T
& analysis_grp_df[,"SqRtVOLUME1A_yr1"] < 19.1)
nonH_nonH_indexes2
all_nonH_nonH_idxes <- c(nonH_nonH_indexes1,nonH_nonH_indexes2)
#for pts has yr2 value:
nonH_nonH_indexes1 <- which(analysis_grp_df[,"SqRtVOLUMEA_bl"] < 19.1
& analysis_grp_df[,"SqRtVOLUME2A_yr2"] < 19.1)
#for ptshas yr1 value, but not yr2 value:
nonH_nonH_indexes2 <- which(analysis_grp_df[,"SqRtVOLUMEA_bl"] < 19.1
& is.na(analysis_grp_df[,"SqRtVOLUME2A_yr2"])==T
& analysis_grp_df[,"SqRtVOLUME1A_yr1"] < 19.1)
all_nonH_nonH_idxes <- c(nonH_nonH_indexes1,nonH_nonH_indexes2)
length(all_nonH_nonH_idxes)
unique(all_nonH_nonH_idxes)
length(> unique(all_nonH_nonH_idxes))
length(unique(all_nonH_nonH_idxes))
##2.start non-high,increase
check <-  analysis_grp_df[-all_nonH_nonH_idxes,c("SqRtVOLUMEA_bl","SqRtVOLUME1A_yr1","SqRtVOLUME2A_yr2")]
View(check)
##3.start non-high,increase
#for pts has yr2 value:
nonH_H_indexes1 <- which(analysis_grp_df[,"SqRtVOLUMEA_bl"] < 19.1
& analysis_grp_df[,"SqRtVOLUME2A_yr2"] >= 19.1)
#for ptshas yr1 value, but not yr2 value:
nonH_H_indexes2 <- which(analysis_grp_df[,"SqRtVOLUMEA_bl"] < 19.1
& is.na(analysis_grp_df[,"SqRtVOLUME2A_yr2"])==T
& analysis_grp_df[,"SqRtVOLUME1A_yr1"] >= 19.1)
all_nonH_H_idxes <- c(nonH_H_indexes1,nonH_H_indexes2)
length(all_nonH_H_idxes)
check <-  analysis_grp_df[all_nonH_H_idxes,c("SqRtVOLUMEA_bl","SqRtVOLUME1A_yr1","SqRtVOLUME2A_yr2")]
View(check)
check <-  analysis_grp_df[-c(all_nonH_nonH_idxes,all_nonH_H_idxes),c("SqRtVOLUMEA_bl","SqRtVOLUME1A_yr1","SqRtVOLUME2A_yr2")]
View(check)
all_nonH_nonH_idxes
all_nonH_H_idxes
h_grp_diff_df <- comb_df[h_grp_idxes,] #99
nonh_grp_diff_df <- comb_df[nonh_grp_idxes,] #72
##2A, start high, stay high group:
analysis_grp_df <- h_grp_diff_df
#for pts has yr2 value:
H_H_indexes1 <- which(analysis_grp_df[,"SqRtVOLUMEA_bl"] < 19.1
& analysis_grp_df[,"SqRtVOLUME2A_yr2"] < 19.1)
H_H_indexes1
#for pts has yr2 value:
H_H_indexes1 <- which(analysis_grp_df[,"SqRtVOLUMEA_bl"] >= 19.1
& analysis_grp_df[,"SqRtVOLUME2A_yr2"] >= 19.1)
#for ptshas yr1 value, but not yr2 value:
H_H_indexes2 <- which(analysis_grp_df[,"SqRtVOLUMEA_bl"] >= 19.1
& is.na(analysis_grp_df[,"SqRtVOLUME2A_yr2"])==T
& analysis_grp_df[,"SqRtVOLUME1A_yr1"] >= 19.1)
all_H_H_idxes <- c(H_H_indexes1,H_H_indexes2)
all_H_H_idxes
length(all_H_H_idxes)
check <-  analysis_grp_df[-all_H_H_idxes,c("SqRtVOLUMEA_bl","SqRtVOLUME1A_yr1","SqRtVOLUME2A_yr2")]
View(check)
check <-  analysis_grp_df[,c("SqRtVOLUMEA_bl","SqRtVOLUME1A_yr1","SqRtVOLUME2A_yr2")]
View(check)
check <-  analysis_grp_df[-all_H_H_idxes,c("SqRtVOLUMEA_bl","SqRtVOLUME1A_yr1","SqRtVOLUME2A_yr2")]
View(check)
##2B.start non-high, stay non-high
analysis_grp_df <- nonh_grp_diff_df
#for pts has yr2 value:
nonH_nonH_indexes1 <- which(analysis_grp_df[,"SqRtVOLUMEA_bl"] < 19.1
& analysis_grp_df[,"SqRtVOLUME2A_yr2"] < 19.1)
#for ptshas yr1 value, but not yr2 value:
nonH_nonH_indexes2 <- which(analysis_grp_df[,"SqRtVOLUMEA_bl"] < 19.1
& is.na(analysis_grp_df[,"SqRtVOLUME2A_yr2"])==T
& analysis_grp_df[,"SqRtVOLUME1A_yr1"] < 19.1)
all_nonH_nonH_idxes <- c(nonH_nonH_indexes1,nonH_nonH_indexes2)
##3.start non-high,get higher
#for pts has yr2 value:
nonH_H_indexes1 <- which(analysis_grp_df[,"SqRtVOLUMEA_bl"] < 19.1
& analysis_grp_df[,"SqRtVOLUME2A_yr2"] >= 19.1)
#for ptshas yr1 value, but not yr2 value:
nonH_H_indexes2 <- which(analysis_grp_df[,"SqRtVOLUMEA_bl"] < 19.1
& is.na(analysis_grp_df[,"SqRtVOLUME2A_yr2"])==T
& analysis_grp_df[,"SqRtVOLUME1A_yr1"] >= 19.1)
all_nonH_H_idxes <- c(nonH_H_indexes1,nonH_H_indexes2)
#22 pts, has no yr1 nor yr2 value
check <-  analysis_grp_df[-c(all_nonH_nonH_idxes,all_nonH_H_idxes),c("SqRtVOLUMEA_bl","SqRtVOLUME1A_yr1","SqRtVOLUME2A_yr2")]
thres_res <- find_distribution_SqrtVol_diff01_and_diff02(analysis_grp_df)
all_SqRtVOLUME_diff <- thres_res[[1]]
thres_l <- thres_res[[2]]
thres_h <- thres_res[[3]]
thres_l
thres_h
trend_outcome_df2 <- create_Trend_sqrtVol_label_func(analysis_grp_df,thres_l,thres_h)
trend_outcome_df2
rownames(trend_outcome_df2) <- trend_outcome_df2$ID
trend_outcome_df2 <- trend_outcome_df2[,-1]
table(trend_outcome_df2$Trend_Label)
View(trend_outcome_df2)
#merge 1,3,8 coded as 1; #7 coded as 0
trend_outcome_df2$New_Trend_Label <- NA
trend_outcome_df2$New_Trend_Label[which(trend_outcome_df2$Trend_Label %in% c(1,2,3,5,8))] <- 1
trend_outcome_df2$New_Trend_Label[which(trend_outcome_df2$Trend_Label %in% c(7))] <- 0
#add manully checked labels for pts who has negative changes with no Increase_atanytime
#'@note: 5 of them are still being checked 1207
decrease_idxes <- which(trend_outcome_df2$Trend_Label %in% c(4,6,9))
for (i in 1:length(decrease_idxes)){
curr_idx <- decrease_idxes[i]
curr_id <- rownames(trend_outcome_df2)[curr_idx]
if (curr_id %in% manul_startnonH_increase_IDs){
trend_outcome_df2$New_Trend_Label[curr_idx] <- 1
}else if (curr_id %in% manul_startnonH_littlechange_IDs){
trend_outcome_df2$New_Trend_Label[curr_idx] <- 0
}
}
trend_outcome_df2$New_Trend_Label[decrease_idxes]
#remove NA label pts
trend_outcome_df2 <- trend_outcome_df2[-which(is.na(trend_outcome_df2$New_Trend_Label) == T),]
View(trend_outcome_df2)
View(Stationary_outcome_df)
View(Stationary_outcome_df)
which(is.na(Stationary_outcome_df[,"Starting_SqRtVOLUME_LABEL"])==T)
which(is.na(Stationary_outcome_df$Starting_SqRtVOLUME_LABEL)==T)
Stationary_outcome_df <- Stationary_outcome_df[-which(is.na(Stationary_outcome_df$Starting_SqRtVOLUME_LABEL)==T),]
View(Stationary_outcome_df)
which(Stationary_outcome_df[,"SqRtVOLUME_Cat_bl"]==0 & Stationary_outcome_df[,"SqRtVOLUME_Cat_bl"]==0)
length(which(Stationary_outcome_df[,"SqRtVOLUME_Cat_bl"]==0 & Stationary_outcome_df[,"SqRtVOLUME_Cat_bl"]==0))
length(which(Stationary_outcome_df[,"SqRtVOLUME_Cat_bl"]==0 & Stationary_outcome_df[,"SqRtVOLUME_Cat_yr1"]==1))
length(which(Stationary_outcome_df[,"SqRtVOLUME_Cat_bl"]==0 & Stationary_outcome_df[,"SqRtVOLUME_Cat_yr2"]==1))
length(which(Stationary_outcome_df[,"SqRtVOLUME_Cat_bl"]==1 & Stationary_outcome_df[,"SqRtVOLUME_Cat_yr2"]==1))
H_H_indexes1
length(all_H_H_idxes)
cond1 <- Stationary_outcome_df[,"SqRtVOLUME_Cat_bl"]==1 & Stationary_outcome_df[,"SqRtVOLUME_Cat_yr2"]==1
cond2 <- Stationary_outcome_df[,"SqRtVOLUME_Cat_bl"]==1 & is.na(Stationary_outcome_df[,"SqRtVOLUME_Cat_yr2"]) == T & Stationary_outcome_df[,"SqRtVOLUME_Cat_yr1"]==1
cond1
which(cond1 | cond1)
which(cond1 | cond2)
all_H_H_idxes2 <- which(cond1 | cond2)
all_H_H_idxes2
identical(all_H_H_idxes2,all_H_H_idxes)
all_H_H_idxes
all_H_H_idxes2 <- order(which(cond1 | cond2))
all_H_H_idxes2
all_H_H_idxes2 <- which(cond1 | cond2)
rownames(Stationary_outcome_df)
rownames(Stationary_outcome_df)[all_H_H_idxes2]
HH_IDs <- rownames(Stationary_outcome_df)[all_H_H_idxes2]
HH_IDs
HH_IDs2 <- rownames(Stationary_outcome_df)[all_H_H_idxes2]
HH_IDs1 <- rownames(analysis_grp_df)
identical(HH_IDs1,HH_IDs2)
intersect(HH_IDs1,HH_IDs2)
HH_IDs1
HH_IDs2
gsub(" |\\.","",rownames(analysis_grp_df))
HH_IDs1 <- gsub(" |\\.","",rownames(analysis_grp_df)[all_H_H_idxes])
HH_IDs2 <- gsub(" |\\.","",rownames(Stationary_outcome_df)[all_H_H_idxes2])
intersect(HH_IDs1,HH_IDs2)
HH_IDs1
##2A, start high, stay high group:
analysis_grp_df <- h_grp_diff_df
#for pts has yr2 value:
H_H_indexes1 <- which(analysis_grp_df[,"SqRtVOLUMEA_bl"] >= 19.1
& analysis_grp_df[,"SqRtVOLUME2A_yr2"] >= 19.1)
#for ptshas yr1 value, but not yr2 value:
H_H_indexes2 <- which(analysis_grp_df[,"SqRtVOLUMEA_bl"] >= 19.1
& is.na(analysis_grp_df[,"SqRtVOLUME2A_yr2"])==T
& analysis_grp_df[,"SqRtVOLUME1A_yr1"] >= 19.1)
all_H_H_idxes <- c(H_H_indexes1,H_H_indexes2)
all_H_H_idxes
rownames(analysis_grp_df)[all_H_H_idxes]
HH_IDs1 <- gsub(" |\\.","",rownames(analysis_grp_df)[all_H_H_idxes])
HH_IDs1
length(which(Stationary_outcome_df[,"SqRtVOLUME_Cat_bl"]==1 & Stationary_outcome_df[,"SqRtVOLUME_Cat_yr2"]==1))
cond1 <- Stationary_outcome_df[,"SqRtVOLUME_Cat_bl"]==1 & Stationary_outcome_df[,"SqRtVOLUME_Cat_yr2"]==1
cond2 <- Stationary_outcome_df[,"SqRtVOLUME_Cat_bl"]==1 & is.na(Stationary_outcome_df[,"SqRtVOLUME_Cat_yr2"]) == T & Stationary_outcome_df[,"SqRtVOLUME_Cat_yr1"]==1
all_H_H_idxes2 <- which(cond1 | cond2)
HH_IDs2 <- gsub(" |\\.","",rownames(Stationary_outcome_df)[all_H_H_idxes2])
HH_IDs2
intersect(HH_IDs2,HH_IDs1)
length(ntersect(HH_IDs2,HH_IDs1))
length(intersect(HH_IDs2,HH_IDs1))
length(which(Stationary_outcome_df[,"SqRtVOLUME_Cat_bl"]==1 & Stationary_outcome_df[,"SqRtVOLUME_Cat_yr2"]==1))
##2A, start high, stay high group:
#for pts has yr2 value:
cond1 <- Stationary_outcome_df[,"SqRtVOLUME_Cat_bl"]==1 & Stationary_outcome_df[,"SqRtVOLUME_Cat_yr2"]==1
#for ptshas yr1 value, but not yr2 value:
cond2 <- Stationary_outcome_df[,"SqRtVOLUME_Cat_bl"]==1 & is.na(Stationary_outcome_df[,"SqRtVOLUME_Cat_yr2"]) == T & Stationary_outcome_df[,"SqRtVOLUME_Cat_yr1"]==1
all_H_H_idxes <- which(cond1 | cond2)
HH_IDs2 <- gsub(" |\\.","",rownames(Stationary_outcome_df)[all_H_H_idxes])
# 41 pts, has no yr1 value nor yr2 value
check <-  Stationary_outcome_df[-all_H_H_idxes,c("SqRtVOLUMEA_bl","SqRtVOLUME1A_yr1","SqRtVOLUME2A_yr2")]
# 41 pts, has no yr1 value nor yr2 value
check <-  Stationary_outcome_df[-all_H_H_idxes,c("SqRtVOLUMEA_bl","SqRtVOLUME1A_yr1","SqRtVOLUME2A_yr2")]
# 41 pts, has no yr1 value nor yr2 value
check <-  Stationary_outcome_df[-all_H_H_idxes,]
View(check)
View(check)
# 41 pts, has no yr1 value nor yr2 value
which(Stationary_outcome_df[,"SqRtVOLUME_Cat_bl"]==1)
# 41 pts, has no yr1 value nor yr2 value
intersect(which(Stationary_outcome_df[,"SqRtVOLUME_Cat_bl"]==1),all_H_H_idxes)
length(all_H_H_idxes)
start_high_grp_Ids
